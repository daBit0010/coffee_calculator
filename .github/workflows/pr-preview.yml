name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
  delete:

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.head_ref }}
    steps:
      - name: Set preview directory
        run: |
          branch="${BRANCH_NAME}"
          if [ -z "${branch}" ]; then
            echo "Branch name is empty; cannot determine preview directory." >&2
            exit 1
          fi

          sanitized=$(printf '%s' "${branch}" | sed 's/[^A-Za-z0-9._-]/-/g')
          sanitized="${sanitized#-}"
          sanitized="${sanitized%-}"
          if [ -z "${sanitized}" ]; then
            echo "Sanitized branch name is empty; cannot determine preview directory." >&2
            exit 1
          fi
          echo "PREVIEW_DIR=branch-${sanitized}" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4

      - name: Build site
        run: |
          rsync -a --exclude '.git' --exclude '.github' --exclude 'dist' ./ dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: dist
          destination_dir: ${{ env.PREVIEW_DIR }}
          keep_files: true

      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewDir = process.env.PREVIEW_DIR;
            const branchName = process.env.BRANCH_NAME;
            const {owner, repo} = context.repo;
            const url = `https://${owner}.github.io/${repo}/${previewDir}/`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner,
              repo,
              body: `Preview for branch \`${branchName}\`: ${url}`
            });

  cleanup:
    if: github.event_name == 'delete' && github.event.ref_type == 'branch'
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.event.ref }}
    steps:
      - name: Set preview directory
        run: |
          branch="${BRANCH_NAME}"
          if [ -z "${branch}" ]; then
            echo "Branch name is empty; cannot determine preview directory." >&2
            exit 1
          fi

          sanitized=$(printf '%s' "${branch}" | sed 's/[^A-Za-z0-9._-]/-/g')
          sanitized="${sanitized#-}"
          sanitized="${sanitized%-}"
          if [ -z "${sanitized}" ]; then
            echo "Sanitized branch name is empty; cannot determine preview directory." >&2
            exit 1
          fi
          echo "PREVIEW_DIR=branch-${sanitized}" >> "$GITHUB_ENV"

      - name: Checkout GitHub Pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Delete preview site
        run: |
          if [ -z "${PREVIEW_DIR}" ]; then
            echo "Preview directory is not set; skipping cleanup."
            exit 0
          fi

          if [ -d "${PREVIEW_DIR}" ]; then
            rm -rf "${PREVIEW_DIR}"
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add -A
            if git diff --cached --quiet; then
              echo "No preview directory to remove."
            else
              git commit -m "Remove preview for branch ${BRANCH_NAME}"
              git push origin gh-pages
            fi
          else
            echo "Preview directory ${PREVIEW_DIR} does not exist."
          fi
